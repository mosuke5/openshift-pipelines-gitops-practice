apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: build-pipeline-with-ut-sonar
spec:
  workspaces: 
    - name: shared-workspace
    - name: sonar-settings
    - name: sonar-credentials
  params:
    - name: git-url
      type: string
      default: "https://github.com/mosuke5/openshift-pipelines-gitops-practice"
    - name: git-revision
      type: string
      default: "main"
    - name: image
      type: string
      default: "image-registry.openshift-image-registry.svc:5000/<ns>/<image name>"
    - name: image-tag
      type: string
      default: "latest"
    - name: context
      type: string
      default: "."
    - name: python-version
      type: string
      default: "3.9"
    - name: sonar-host-url
      type: string
      default: "http://sonarqube-sonarqube.handson-devops:9000"
    - name: sonar-project-key
      type: string
      default: "userX-python-app"
  tasks:
    - name: fetch-repository
      taskRef:
        name: git-clone
        kind: ClusterTask
      workspaces:
        - name: output
          workspace: shared-workspace
      params:
        - name: url
          value: $(params.git-url)
        - name: deleteExisting
          value: "true"
        - name: revision
          value: $(params.git-revision)
    - name: unit-test
      taskRef:
        name: pytest-with-mysql
      params:
        - name: PYTHON
          value: $(params.python-version)
        - name: ARGS
          value: "--cov=. --cov-report=xm"
      workspaces:
        - name: source
          workspace: shared-workspace
      runAfter:
        - fetch-repository
    - name: scan-source-code
      taskRef:
        name: sonarqube-scanner
      params:
        - name: SONAR_HOST_URL
          value: $(params.sonar-host-url)
        - name: SONAR_PROJECT_KEY
          value: $(params.sonar-project-key)
      workspaces:
        - name: source
          workspace: shared-workspace
        - name: sonar-settings
          workspace: sonar-settings
        - name: sonar-credentials
          workspace: sonar-credentials
      runAfter:
        - unit-test
    - name: build-push-image
      taskRef:
        name: buildah
        kind: ClusterTask
      params:
        - name: IMAGE
          value: $(params.image):$(params.image-tag)
        - name: DOCKERFILE
          value: "Dockerfile"
        - name: CONTEXT
          value: "$(workspaces.source.path)/$(params.context)"
      workspaces:
        - name: source
          workspace: shared-workspace
      runAfter:
        - scan-source-code
